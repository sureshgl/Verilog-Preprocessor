TIMEUNIT
	:	'timeunit'
	;

TIMEPRECISION
	:	'timeprecision'
	;

Zero_Or_One: [01];

EDGE_SPEC:
             '01'|'10';

TIME_UNIT : 's' | 'ms' | 'us' | 'ns' | 'ps' | 'fs';

Real_number
    :   Unsigned_number '.' Unsigned_number
    |   Unsigned_number ( '.' Unsigned_number )? [eE] ( [+-] )? Unsigned_number
    ;

Decimal_number
    :   Unsigned_number
    | ( Size )? Decimal_base Unsigned_number
    | ( Size )? Decimal_base X_digit ( '_' )*
    | ( Size )? Decimal_base Z_digit ( '_' )*
    ;

Binary_number : ( Size )? Binary_base Binary_value ;

Octal_number : ( Size )? Octal_base Octal_value ;

Hex_number : ( Size )? Hex_base Hex_value ;

fragment
Sign : [+-] ;

fragment
Size : Non_zero_unsigned_number ;

fragment
Non_zero_unsigned_number : Non_zero_decimal_digit ( '_' | Decimal_digit )* ;

fragment
Unsigned_number : Decimal_digit ( '_' | Decimal_digit )* ;

fragment
Binary_value : Binary_digit ( '_' | Binary_digit )* ;

fragment
Octal_value : Octal_digit ( '_' | Octal_digit )* ;

fragment
Hex_value : Hex_digit ( '_' | Hex_digit )* ;

fragment
Decimal_base : '\'' [sS]? [dD] ;

fragment
Binary_base : '\'' [sS]? [bB] ;

fragment
Octal_base : '\'' [sS]? [oO] ;

fragment
Hex_base : '\'' [sS]? [hH] ;

fragment
Non_zero_decimal_digit : [1-9] ;

fragment
Decimal_digit : [0-9] ;

fragment
Binary_digit : X_digit | Z_digit | [01] ;

fragment
Octal_digit : X_digit | Z_digit | [0-7] ;

fragment
Hex_digit : X_digit | Z_digit | [0-9a-fA-F] ;

fragment
X_digit : [xX] ;

fragment
Z_digit : [zZ?] ;

Z_or_X: X_digit|Z_digit;

TF_ID	:	'$' [a-zA-Z0-9_$] [a-zA-Z0-9_$]*;

ID  :	[a-zA-Z_] [a-zA-Z0-9_$]*
    ;

ESCAPED_IDENTIFIER : 
	'\\'~(' '| '\t'| '\r'| '\n')*;

COMMENT
    :   ('//' ~('\n'|'\r')* '\r'? '\n' 
    |   '/*' .*? '*/' )-> channel(HIDDEN)
    ;

WS  :   [ \t\n\r]+ -> channel(HIDDEN)
    ;

STRING : '"' ( ~[\n\r"] )* '"' ;

PLUS	:	'+';

MINUS	:	'-';

NOT	:	'!';

COMPLIMENT
	:	'~';

AND
	:	'&';

NAND
	:	'~&';

OR:	'|';

NOR
	:	'~|';

XOR
	:	'^';

XORN
	:	'~^';

XNOR
	:	'^~';

STAR	:	'*';

DIV	:	'/';

MODULO	:	'%';

EQUALS	:	'==';

NOT_EQUALS
	:	'!=';

CASE_EQUALITY
	:	'===';

CASE_INEQUALITY
	:	'!==';

CASE_Q	:	'==?';

NOT_CASE_Q
	:	'!=?';

LOG_AND	:	'&&';

LOG_OR	:	'||';

LT	:	'<';

LE	:	'<=';

GT	:	'>';

GE	:	'>=';

RSHIFT	:	'>>';

LSHIFT	:	'<<';

ARSHIFT	:	'>>>';

ALSHIFT	:	'<<<';

DERIVE	:	'->';

DDERIVE	:	'<->';

LBRACK
	:	'['
	;

RBRACK
	:	']'
	;

LPAREN
	:	'('
	;

RPAREN
	:	')'
	;

STARSTAR
	:	'**'
	;

ASSIGN
	:	'='
	;

LCURL
	:	'{'
	;

RCURL
	:	'}'
	;

DOT	:	'.';

COMMA	:	',';

SEMI	:	';';

COLON	:	':';

HASH
	:	'#'
	;

DOUBLE_HASH
	:	'##'
	;

HASH_ZERO
	:	'#0'
	;

DOLLAR:
          '$';

