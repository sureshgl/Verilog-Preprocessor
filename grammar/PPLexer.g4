lexer grammar PPLexer;

IF : '`ifdef';
IFNDEF : '`ifndef';
ELSEIF : '`elsif';
ELSE : '`else';
ENDIF : '`endif';
MODULE : 'module';
MACROMODULE : 'macromodule';
ENDMODULE : 'endmodule';
EXTERN : 'extern';
STATIC : 'static';
AUTOMATIC : 'automatic';
BEGIN : 'begin';
GENERATE : 'generate';
FOR : 'for';
ONLYIF : 'if';
ONLYELSE : 'else';
ASSUME : 'assume';
ID : [a-zA-Z_] [a-zA-Z0-9$_']*;
ID_WITH_NUMBER :[a-zA-Z_0-9] [a-zA-Z0-9$_']*;
DEFINE : '`define'-> mode(tickdefine_mode);
UNDEF : '`undef' ;
INCLUDE : '`include'-> mode(tickdefine_mode);
TIMESCALE : '`timescale' -> mode(tickdefine_mode);
RESETALL : '`resetall' -> mode(tickdefine_mode);
ESCAPE : '\\';
TICK_ID : '`'( ~[' '| '`' | 'define' | 'undef' | 'include' | 'ifdef' | 'elsif' |'else' | 'endif' | 'timescale' | 'resetall' | '('| '\n' | '\r' ] | ID | ID_WITH_NUMBER)* ; 
WS  :   [ \t]+ -> channel(HIDDEN);
STRING : '"' ( ~[\n\r"] )* '"' ;
AT_RATE : '@';
LPARENSTARRPAREN : '(*)';
ATTHERATELPAREN : '@@(';
QUESTIONMARK : '?';
ATMARK : '\'';
PLUS	:	'+';
MINUS	:	'-';
NOT	:	'!';
LPARENSTAR : '(*';
STARRPAREN : '*)';
COMPLIMENT :	'~';
AND :	'&';
NAND :	'~&';
OR:	'|';
NOR :	'~|';
XOR :	'^';
XORN :	'~^';
XNOR :	'^~';
STAR	:	'*';
DIV	:	'/';
MODULO	:	'%';
EQUALS	:	'==';
NOT_EQUALS :	'!=';
CASE_EQUALITY :	'===';
CASE_INEQUALITY :	'!==';
CASE_Q	:	'==?';
NOT_CASE_Q :	'!=?';
LOG_AND	:	'&&';
ANDANDAND : '&&&';
LOG_OR	:	'||';
LT	:	'<';
LE	:	'<=';
GT	:	'>';
GE	:	'>=';
RSHIFT	:	'>>';
LSHIFT	:	'<<';
ARSHIFT	:	'>>>';
ALSHIFT	:	'<<<';
UNSIGNED_LSHIFT_ASSIGN : '<<<=';
DERIVE	:	'->';
ORDERIVE : '|->';
DDERIVE	:	'<->';
LBRACK :	'[' ;
RBRACK :	']' ;
LPAREN :	'(' ;
RPAREN :	')' ;
STARSTAR :	'**' ;
ASSIGN :	'=' ;
LCURL :	'{' ;
RCURL :	'}' ;
DOT	:	'.';
COMMA	:	',';
SEMI	:	';';
COLON	:	':';
HASH :	'#' ;
DOUBLE_HASH :	'##' ;
HASH_ZERO :	'#0' ;
DOLLAR: '$';
DOTSTAR : '.*';
ATTHERATESTAR : '@*';
PERCENTILEEQUAL : '%=';
STARTCOLONCOLONSTAR : '*::*';
COLONCOLON : '::';
ESCAPELCURL : '\'{';
SCALAR_CONSTANT1 : '\'1';
COLONSLASH : ':/';
RSHIFT_ASSIGN : '>>=';
UNSIGNED_RSHIFT_ASSIGN : '>>>=';
STARGT : '*>';
MINUSEQUALS : '-=';
XOREQUAL : '^=';
OREQUAL : '|=';
MINUSCOLON : '-:';
STARTEQUALS : '*=';
ORIMPLIES : '|=>';
IMPLIES : '=>';
PLUSCOLON : '+:';
PLUSEQUALS : '+=';
SLASHEQUALS : '/=';
DERIVEGT : '->>';
LSHIFT_ASSIGN : '<<=';
ANDEQUALS : '&=';
SCALAR_CONSTANT0 : '\'0';
NL : ('\r\n'|'\n'|'\r') -> channel(HIDDEN);
COMMENT : (('//' ~('\r' | '\n')* '\r'? '\n') | ( '/*' .*? '*/'));//-> channel(HIDDEN);

mode tickdefine_mode ;
PPWS  :   [\\\t]+ -> channel(HIDDEN);
PPSPACE : ' ';
PPID : [a-zA-Z_] [a-zA-Z0-9$_']*;
PPID_NUMBER : [a-zA-Z0-9] [a-zA-Z0-9$_']*;
PPESCAPE : '\\';
PPBEGIN : 'begin';
PPGENERATE : 'generate';
PPFOR : 'for';
PPONLYIF : 'if';
PPONLYELSE : 'else';
PPASSUME : 'assume';
PPTOKEN : '`define'|'`undef' |'`include' |'`if'|'`else'|'`endif'|'`timescale' |'`resetall';
PPTICK_ID : '`'( ~[' '| '`' | 'define' | 'undef' | 'include' | 'ifdef' | 'elsif' |'else' | 'endif' | 'timescale' | 'resetall' | '\n' | '\r' ] | PPID | PPNUMBER )* ; 
PPNUMBER : [0-9] [0-9]*;
PPSTRING : '"' ( ~[\n\r"] )* '"' ;
PPATMARK : '\'';
PPPLUS	:	'+';
PPOREQUAL : '|=';
PPIMPLIES : '=>';
PPDERIVEGT : '->>';
PPCOLONCOLON : '::';
PPPLUSCOLON : '+:';
PPORIMPLIES : '|=>';
PPPLUSEQUALS : '+=';
PPSLASHEQUALS : '/=';
PPANDEQUALS : '&=';
PPPERCENTILEEQUAL : '%=';
PPESCAPELCURL : '\'{';
PPORDERIVE : '|->';
PPSCALAR_CONSTANT0 : '\'0';
PPAT_RATE : '@';
PPMINUSCOLON : '-:';
PPSTARTEQUALS : '*=';
PPATTHERATESTAR : '@*';
PPLPARENSTARRPAREN : '(*)';
PPATTHERATELPAREN : '@@(';
PPSCALAR_CONSTANT1 : '\'1';
PPCOLONSLASH : ':/';
PPXOREQUAL : '^=';
PPMINUSEQUALS : '-=';
PPRSHIFT_ASSIGN : '>>=';
PPUNSIGNED_RSHIFT_ASSIGN : '>>>=';
PPSTARGT : '*>';
PPQUESTIONMARK : '?';
PPMINUS	:	'-';
PPNOT	:	'!';
PPCOMPLIMENT :	'~';
PPAND :	'&';
PPNAND :	'~&';
PPOR:	'|';
PPNOR :	'~|';
PPXOR :	'^';
PPXORN :	'~^';
PPXNOR :	'^~';
PPSTAR	:	'*';
PPDIV	:	'/';
PPMODULO	:	'%';
PPEQUALS	:	'==';
PPNOT_EQUALS :	'!=';
PPCASE_EQUALITY :	'===';
PPCASE_INEQUALITY :	'!==';
PPCASE_Q	:	'==?';
PPNOT_CASE_Q :	'!=?';
PPLOG_AND	:	'&&';
PPANDANDAND : '&&&';
PPLOG_OR	:	'||';
PPDOTSTAR : '.*';
PPSTARTCOLONCOLONSTAR : '*::*';
PPLT	:	'<';
PPLE	:	'<=';
PPGT	:	'>';
PPGE	:	'>=';
PPRSHIFT	:	'>>';
PPLSHIFT	:	'<<';
PPARSHIFT	:	'>>>';
PPALSHIFT	:	'<<<';
PPUNSIGNED_LSHIFT_ASSIGN : '<<<=';
PPLSHIFT_ASSIGN : '<<=';
PPDERIVE	:	'->';
PPDDERIVE	:	'<->';
PPLBRACK :	'[' ;
PPRBRACK :	']' ;
PPLPAREN :	'(' ;
PPRPAREN :	')' ;
PPSTARSTAR :	'**' ;
PPASSIGN :	'=' ;
PPLCURL :	'{' ;
PPRCURL :	'}' ;
PPDOT	:	'.';
PPCOMMA	:	',';
PPSEMI	:	';';
PPCOLON	:	':';
PPHASH :	'#' ;
PPDOUBLE_HASH :	'##' ;
PPHASH_ZERO :	'#0' ;
PPDOLLAR: '$';
PPNL : ('\r\n'|'\n'|'\r') -> mode(DEFAULT_MODE);
